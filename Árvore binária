#include <stdio.h>
#include <stdlib.h>

typedef struct noApelido {
    int conteudo;
    struct noApelido *esquerda, *direita;
}No;

typedef struct {
    No *raiz;
}arvBi;

void inserirEsquerda(No *no, int valor){
    if(no->esquerda == NULL){
        No *novo = (No*)malloc(sizeof(No));
        novo->conteudo = valor;
        novo->direita = NULL;
        novo->esquerda = NULL;
        no->esquerda = novo;
    } else {
        if(valor < no->esquerda->conteudo){
            inserirEsquerda(no->esquerda, valor);
        } else {
            inserirDireita(no->esquerda, valor);
        }
    }
}

void inserirDireita(No *no, int valor){
    if(no->direita == NULL){
        No *novo = (No*)malloc(sizeof(No));
        novo->conteudo = valor;
        novo->direita = NULL;
        novo->esquerda = NULL;
        no->direita = novo;
    } else {
        if(valor > no->direita->conteudo){
            inserirDireita(no->direita, valor);
        } else {
            inserirEsquerda(no->direita, valor);
        }
    }
}

void inserir(arvBi *arv, int valor){
    if(arv->raiz == NULL){
        No *novo = (No*)malloc(sizeof(No));
        novo->conteudo = valor;
        novo->direita = NULL;
        novo->esquerda = NULL;
        arv->raiz = novo;
    } else {
        if(valor < arv->raiz->conteudo){
            inserirEsquerda(arv->raiz, valor);
        } else {
            inserirDireita(arv->raiz, valor);
        }

    }
}

void imprimir(No *raiz){
    if(raiz != NULL){
        printf("%d ", raiz->conteudo);   //imprime primeiro a raiz, depois elementos a esquerda e depois a direita
        imprimir(raiz->esquerda);
        imprimir(raiz->direita);
    }
}

int main(){
    int op, valor;
    arvBi arv;
    arv.raiz = NULL;

    do
    {
        printf("\n0 - sair\n1 - inserir\n2 - imprimir\n");
        scanf("%d", &op);

        switch (op)
        {
        case 0:
            printf("\nSaindo...\n");
            break;
        case 1:
            printf("\nDigite um valor:\n");
            scanf("%d", &valor);
            inserir(&arv, valor);
            break;
        case 2:
            imprimir(arv.raiz);
            break;
        default:
        printf("\nInvalido");
            break;
        }
    } while (op != 0);
    
    return 0;
}


